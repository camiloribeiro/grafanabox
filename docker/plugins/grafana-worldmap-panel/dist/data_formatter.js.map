{"version":3,"sources":["../src/data_formatter.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAO,O;;;;;;;;;;;;;;;;;;;;;AAEc,mB;AACnB,+BAAY,IAAZ,EAAkB,GAAlB,EAAuB;AAAA;;AACrB,eAAK,IAAL,GAAY,IAAZ;AACA,eAAK,GAAL,GAAW,GAAX;AACD;;;;oCAES,I,EAAM;AAAA;;AACd,gBAAI,KAAK,IAAL,CAAU,MAAV,IAAoB,KAAK,IAAL,CAAU,MAAV,CAAiB,MAAjB,GAA0B,CAAlD,EAAqD;AAAA;AACnD,oBAAI,eAAe,CAAnB;AACA,oBAAI,cAAc,OAAO,SAAzB;;AAEA,sBAAK,IAAL,CAAU,MAAV,CAAiB,OAAjB,CAAyB,iBAAS;AAChC,sBAAM,YAAY,EAAE,IAAF,CAAO,MAAM,UAAb,CAAlB;AACA,sBAAM,YAAY,EAAE,OAAF,CAAU,SAAV,IAAuB,UAAU,CAAV,CAAvB,GAAsC,IAAxD;AACA,sBAAM,WAAW,EAAE,IAAF,CAAO,MAAK,IAAL,CAAU,SAAjB,EAA4B,UAAC,GAAD,EAAS;AAAE,2BAAO,IAAI,GAAJ,CAAQ,WAAR,OAA0B,MAAM,KAAN,CAAY,WAAZ,EAAjC;AAA6D,mBAApG,CAAjB;;AAEA,sBAAI,CAAC,QAAL,EAAe;;AAEf,sBAAI,EAAE,QAAF,CAAW,SAAX,CAAJ,EAA2B;AACzB,yBAAK,IAAL,CAAU,EAAC,KAAK,MAAM,KAAZ,EAAmB,OAAO,CAA1B,EAA6B,gBAAgB,SAA7C,EAAwD,cAAc,CAAtE,EAAV;AACD,mBAFD,MAEO;AACL,wBAAM,YAAY;AAChB,2BAAK,MAAM,KADK;AAEhB,oCAAc,SAAS,IAFP;AAGhB,wCAAkB,SAAS,QAHX;AAIhB,yCAAmB,SAAS,SAJZ;AAKhB,6BAAO,MAAM,KAAN,CAAY,MAAK,IAAL,CAAU,KAAV,CAAgB,SAA5B,CALS;AAMhB,sCAAgB,SANA;AAOhB,oCAAc;AAPE,qBAAlB;;AAUA,wBAAI,UAAU,KAAV,GAAkB,YAAtB,EAAoC,eAAe,UAAU,KAAzB;AACpC,wBAAI,UAAU,KAAV,GAAkB,WAAtB,EAAmC,cAAc,UAAU,KAAxB;;AAEnC,8BAAU,YAAV,GAAyB,MAAK,GAAL,CAAS,UAAT,CAAoB,UAAU,KAA9B,EAAqC,SAAS,MAAK,IAAL,CAAU,KAAV,CAAgB,QAAzB,EAAmC,EAAnC,KAA0C,CAA/E,CAAzB;AACA,yBAAK,IAAL,CAAU,SAAV;AACD;AACF,iBA1BD;;AA4BA,qBAAK,YAAL,GAAoB,YAApB;AACA,qBAAK,WAAL,GAAmB,WAAnB;AACA,qBAAK,UAAL,GAAkB,eAAe,WAAjC;AAlCmD;AAmCpD;AACF;;;;;;yBA3CkB,a","file":"data_formatter.js","sourcesContent":["import _ from 'lodash';\n\nexport default class DataFormatter {\n  constructor(ctrl, kbn) {\n    this.ctrl = ctrl;\n    this.kbn = kbn;\n  }\n\n  setValues(data) {\n    if (this.ctrl.series && this.ctrl.series.length > 0) {\n      let highestValue = 0;\n      let lowestValue = Number.MAX_VALUE;\n\n      this.ctrl.series.forEach(serie => {\n        const lastPoint = _.last(serie.datapoints);\n        const lastValue = _.isArray(lastPoint) ? lastPoint[0] : null;\n        const location = _.find(this.ctrl.locations, (loc) => { return loc.key.toUpperCase() === serie.alias.toUpperCase(); });\n\n        if (!location) return;\n\n        if (_.isString(lastValue)) {\n          data.push({key: serie.alias, value: 0, valueFormatted: lastValue, valueRounded: 0});\n        } else {\n          const dataValue = {\n            key: serie.alias,\n            locationName: location.name,\n            locationLatitude: location.latitude,\n            locationLongitude: location.longitude,\n            value: serie.stats[this.ctrl.panel.valueName],\n            valueFormatted: lastValue,\n            valueRounded: 0\n          };\n\n          if (dataValue.value > highestValue) highestValue = dataValue.value;\n          if (dataValue.value < lowestValue) lowestValue = dataValue.value;\n\n          dataValue.valueRounded = this.kbn.roundValue(dataValue.value, parseInt(this.ctrl.panel.decimals, 10) || 0);\n          data.push(dataValue);\n        }\n      });\n\n      data.highestValue = highestValue;\n      data.lowestValue = lowestValue;\n      data.valueRange = highestValue - lowestValue;\n    }\n  }\n}\n"]}