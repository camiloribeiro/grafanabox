{"version":3,"sources":["../src/worldmap_ctrl.js"],"names":[],"mappings":"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","file":"worldmap_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport TimeSeries from 'app/core/time_series2';\nimport kbn from 'app/core/utils/kbn';\nimport mapRenderer from './map_renderer';\nimport DataFormatter from './data_formatter';\nimport decodeGeoHash from './geohash';\nimport './css/worldmap-panel.css!';\n\nconst panelDefaults = {\n  maxDataPoints: 1,\n  mapCenter: '(0째, 0째)',\n  mapCenterLatitude: 0,\n  mapCenterLongitude: 0,\n  initialZoom: 1,\n  valueName: 'total',\n  circleMinSize: 2,\n  circleMaxSize: 30,\n  locationData: 'countries',\n  thresholds: '0,10',\n  colors: ['rgba(245, 54, 54, 0.9)', 'rgba(237, 129, 40, 0.89)', 'rgba(50, 172, 45, 0.97)'],\n  unitSingle: '',\n  unitPlural: '',\n  showLegend: true,\n  esMetric: 'Count',\n  decimals: 0\n};\n\nconst mapCenters = {\n  '(0째, 0째)': {mapCenterLatitude: 0, mapCenterLongitude: 0},\n  'North America': {mapCenterLatitude: 40, mapCenterLongitude: -100},\n  'Europe': {mapCenterLatitude: 46, mapCenterLongitude: 14},\n  'West Asia': {mapCenterLatitude: 26, mapCenterLongitude: 53},\n  'SE Asia': {mapCenterLatitude: 10, mapCenterLongitude: 106}\n};\n\nexport class WorldmapCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, contextSrv) {\n    super($scope, $injector);\n\n    this.setMapProvider(contextSrv);\n    _.defaults(this.panel, panelDefaults);\n\n    this.dataFormatter = new DataFormatter(this, kbn);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('data-snapshot-load', this.onDataSnapshotLoad.bind(this));\n\n    this.loadLocationDataFromFile();\n  }\n\n  setMapProvider(contextSrv) {\n    this.tileServer = contextSrv.user.lightTheme ? 'CartoDB Positron' : 'CartoDB Dark';\n    this.setMapSaturationClass();\n  }\n\n  setMapSaturationClass() {\n    if (this.tileServer === 'CartoDB Dark') {\n      this.saturationClass = 'map-darken';\n    } else {\n      this.saturationClass = '';\n    }\n  }\n\n  loadLocationDataFromFile(reload) {\n    if (this.map && !reload) return;\n\n    if (this.panel.snapshotLocationData) {\n      this.locations = this.panel.snapshotLocationData;\n      return;\n    }\n\n    if (this.panel.locationData === 'jsonp endpoint') {\n      if (!this.panel.jsonpUrl || !this.panel.jsonpCallback) return;\n\n      window.$.ajax({\n        type: 'GET',\n        url: this.panel.jsonpUrl + '?callback=?',\n        contentType: 'application/json',\n        jsonpCallback: this.panel.jsonpCallback,\n        dataType: 'jsonp',\n        success: (res) => {\n          this.locations = res;\n          this.render();\n        }\n      });\n    } else if (this.panel.locationData === 'json endpoint') {\n      if (!this.panel.jsonUrl) return;\n\n      window.$.getJSON(this.panel.jsonUrl).then(res => this.reloadLocations.bind(this, res));\n    } else if (this.panel.locationData !== 'geohash') {\n      window.$.getJSON('public/plugins/grafana-worldmap-panel/data/' + this.panel.locationData + '.json').then(this.reloadLocations.bind(this));\n    }\n  }\n\n  reloadLocations(res) {\n    this.locations = res;\n    this.refresh();\n  }\n\n  onPanelTeardown() {\n    if (this.map) this.map.remove();\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Worldmap', 'public/plugins/grafana-worldmap-panel/editor.html', 2);\n  }\n\n  onDataReceived(dataList) {\n    if (!dataList) return;\n\n    if (this.dashboard.snapshot && this.locations) {\n      this.panel.snapshotLocationData = this.locations;\n    }\n\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    const data = [];\n    if (this.panel.locationData === 'geohash') {\n      this.setGeohashValues(data);\n    } else {\n      this.dataFormatter.setValues(data);\n    }\n    this.data = data;\n\n    this.updateThresholdData();\n\n    this.render();\n  }\n\n  onDataSnapshotLoad(snapshotData) {\n    this.onDataReceived(snapshotData);\n  }\n\n  setGeohashValues(data) {\n    if (!this.panel.esGeoPoint || !this.panel.esMetric) return;\n\n    if (this.series && this.series.length > 0) {\n      let highestValue = 0;\n      let lowestValue = Number.MAX_VALUE;\n\n      this.series[0].datapoints.forEach(datapoint => {\n        const encodedGeohash = datapoint[this.panel.esGeoPoint];\n        const decodedGeohash = decodeGeoHash(encodedGeohash);\n\n        const dataValue = {\n          key: encodedGeohash,\n          locationName: this.panel.esLocationName ? datapoint[this.panel.esLocationName] : encodedGeohash,\n          locationLatitude: decodedGeohash.latitude,\n          locationLongitude: decodedGeohash.longitude,\n          value: datapoint[this.panel.esMetric],\n          valueFormatted: datapoint[this.panel.esMetric],\n          valueRounded: 0\n        };\n\n        if (dataValue.value > highestValue) highestValue = dataValue.value;\n        if (dataValue.value < lowestValue) lowestValue = dataValue.value;\n\n        dataValue.valueRounded = kbn.roundValue(dataValue.value, this.panel.decimals || 0);\n        data.push(dataValue);\n      });\n\n      data.highestValue = highestValue;\n      data.lowestValue = lowestValue;\n      data.valueRange = highestValue - lowestValue;\n    }\n  }\n\n  seriesHandler(seriesData) {\n    const series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target,\n    });\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  setNewMapCenter() {\n    if (this.panel.mapCenter !== 'custom') {\n      this.panel.mapCenterLatitude = mapCenters[this.panel.mapCenter].mapCenterLatitude;\n      this.panel.mapCenterLongitude = mapCenters[this.panel.mapCenter].mapCenterLongitude;\n    }\n    this.mapCenterMoved = true;\n    this.render();\n  }\n\n  setZoom() {\n    this.map.setZoom(this.panel.initialZoom);\n  }\n\n  toggleLegend() {\n    if (!this.panel.showLegend) {\n      this.map.removeLegend();\n    }\n    this.render();\n  }\n\n  changeThresholds() {\n    this.updateThresholdData();\n    this.map.legend.update();\n    this.render();\n  }\n\n  updateThresholdData() {\n    this.data.thresholds = this.panel.thresholds.split(',').map(strValue => {\n      return Number(strValue.trim());\n    });\n  }\n\n  changeLocationData() {\n    this.loadLocationDataFromFile(true);\n\n    if (this.panel.locationData === 'geohash') {\n      this.render();\n    }\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    mapRenderer(scope, elem, attrs, ctrl);\n  }\n}\n\nWorldmapCtrl.templateUrl = 'module.html';\n"]}